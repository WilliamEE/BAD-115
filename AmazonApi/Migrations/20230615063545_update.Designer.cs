// <auto-generated />
using System;
using AmazonApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmazonApi.Migrations
{
    [DbContext(typeof(BD_AmazonContext))]
    [Migration("20230615063545_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AmazonApi.Models.Centros", b =>
                {
                    b.Property<int>("CentroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionCentro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCentro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("CentroId");

                    b.HasIndex("PaisId");

                    b.ToTable("Centros");
                });

            modelBuilder.Entity("AmazonApi.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ClienteId");

                    b.HasIndex("PaisId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AmazonApi.Models.DespachoEstados", b =>
                {
                    b.Property<int>("DespachoEstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DespachoEstadoId");

                    b.ToTable("DespachoEstados");
                });

            modelBuilder.Entity("AmazonApi.Models.Despachos", b =>
                {
                    b.Property<int>("DespachoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DespachoEstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObservacionesAdicionales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("TransporteProveedoresId")
                        .HasColumnType("int");

                    b.HasKey("DespachoId");

                    b.HasIndex("DespachoEstadoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("TransporteProveedoresId");

                    b.ToTable("Despachos");
                });

            modelBuilder.Entity("AmazonApi.Models.Inventarios", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CentroId")
                        .HasColumnType("int");

                    b.Property<int>("Entrada")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("Salida")
                        .HasColumnType("int");

                    b.HasKey("InventarioId");

                    b.HasIndex("CentroId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("AmazonApi.Models.Paises", b =>
                {
                    b.Property<int>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombrepais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaisId");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("AmazonApi.Models.PedidoDetalles", b =>
                {
                    b.Property<int>("PedidoDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("PedidoDetalleId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("PedidoDetalles");
                });

            modelBuilder.Entity("AmazonApi.Models.PedidoEstados", b =>
                {
                    b.Property<int>("PedidoEstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PedidoEstadoId");

                    b.ToTable("PedidoEstados");
                });

            modelBuilder.Entity("AmazonApi.Models.Pedidos", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("DireccionEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionesAdicionales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoEstadoId")
                        .HasColumnType("int");

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PedidoEstadoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("AmazonApi.Models.ProductoTipos", b =>
                {
                    b.Property<int>("ProductoTipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreTipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ProductoTipoId");

                    b.ToTable("ProductoTipos");
                });

            modelBuilder.Entity("AmazonApi.Models.Productos", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductoTipoId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ProductoId");

                    b.HasIndex("ProductoTipoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("AmazonApi.Models.Recepciones", b =>
                {
                    b.Property<int>("RecepcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("DespachoId")
                        .HasColumnType("int");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.HasKey("RecepcionId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DespachoId");

                    b.ToTable("Recepciones");
                });

            modelBuilder.Entity("AmazonApi.Models.TransporteProveedores", b =>
                {
                    b.Property<int>("TransporteProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("TransporteProveedorId");

                    b.HasIndex("PaisId");

                    b.ToTable("TransporteProveedores");
                });

            modelBuilder.Entity("MarketingWebApi.Models.Items", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemLink")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ModulId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("ModulId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("MarketingWebApi.Models.Modules", b =>
                {
                    b.Property<int>("ModulId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModulName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ModulId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("MarketingWebApi.Models.Rols", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("RolName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RolId");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("MarketingWebApi.Models.RolsItems", b =>
                {
                    b.Property<int>("RolItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("RolItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("RolId");

                    b.ToTable("RolsItems");
                });

            modelBuilder.Entity("MarketingWebApi.Models.UserItems", b =>
                {
                    b.Property<int>("UserItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Add")
                        .HasColumnType("bit");

                    b.Property<bool?>("Delete")
                        .HasColumnType("bit");

                    b.Property<bool?>("Edit")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<bool?>("See")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserItemsId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("UserItems");
                });

            modelBuilder.Entity("MarketingWebApi.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RolId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AmazonApi.Models.Centros", b =>
                {
                    b.HasOne("AmazonApi.Models.Paises", "Pais")
                        .WithMany("Centros")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("AmazonApi.Models.Clientes", b =>
                {
                    b.HasOne("AmazonApi.Models.Paises", "Pais")
                        .WithMany("Clientes")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("AmazonApi.Models.Despachos", b =>
                {
                    b.HasOne("AmazonApi.Models.DespachoEstados", "DespachoEstado")
                        .WithMany("Despachos")
                        .HasForeignKey("DespachoEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.Pedidos", "Pedido")
                        .WithMany("Despachos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.TransporteProveedores", "TransporteProveedores")
                        .WithMany("Despachos")
                        .HasForeignKey("TransporteProveedoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DespachoEstado");

                    b.Navigation("Pedido");

                    b.Navigation("TransporteProveedores");
                });

            modelBuilder.Entity("AmazonApi.Models.Inventarios", b =>
                {
                    b.HasOne("AmazonApi.Models.Centros", "Centro")
                        .WithMany("Inventarios")
                        .HasForeignKey("CentroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.Productos", "Producto")
                        .WithMany("Inventarios")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centro");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("AmazonApi.Models.PedidoDetalles", b =>
                {
                    b.HasOne("AmazonApi.Models.Pedidos", "Pedido")
                        .WithMany("PedidoDetalles")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.Productos", "Producto")
                        .WithMany("PedidoDetalles")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("AmazonApi.Models.Pedidos", b =>
                {
                    b.HasOne("AmazonApi.Models.Clientes", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.PedidoEstados", "PedidoEstado")
                        .WithMany()
                        .HasForeignKey("PedidoEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PedidoEstado");
                });

            modelBuilder.Entity("AmazonApi.Models.Productos", b =>
                {
                    b.HasOne("AmazonApi.Models.ProductoTipos", "ProductoTipo")
                        .WithMany("Productos")
                        .HasForeignKey("ProductoTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoTipo");
                });

            modelBuilder.Entity("AmazonApi.Models.Recepciones", b =>
                {
                    b.HasOne("AmazonApi.Models.Clientes", "Cliente")
                        .WithMany("Recepciones")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.Despachos", "Despacho")
                        .WithMany("Recepciones")
                        .HasForeignKey("DespachoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Despacho");
                });

            modelBuilder.Entity("AmazonApi.Models.TransporteProveedores", b =>
                {
                    b.HasOne("AmazonApi.Models.Paises", "Pais")
                        .WithMany("TransporteProveedores")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("MarketingWebApi.Models.Items", b =>
                {
                    b.HasOne("MarketingWebApi.Models.Modules", "Moduls")
                        .WithMany("Items")
                        .HasForeignKey("ModulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moduls");
                });

            modelBuilder.Entity("MarketingWebApi.Models.RolsItems", b =>
                {
                    b.HasOne("MarketingWebApi.Models.Items", "Items")
                        .WithMany("RolsItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketingWebApi.Models.Rols", "Rols")
                        .WithMany("RolsItems")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Items");

                    b.Navigation("Rols");
                });

            modelBuilder.Entity("MarketingWebApi.Models.UserItems", b =>
                {
                    b.HasOne("MarketingWebApi.Models.Items", "Items")
                        .WithMany("UserItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketingWebApi.Models.Users", "Users")
                        .WithMany("UserItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Items");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MarketingWebApi.Models.Users", b =>
                {
                    b.HasOne("MarketingWebApi.Models.Rols", "Rols")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rols");
                });

            modelBuilder.Entity("AmazonApi.Models.Centros", b =>
                {
                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("AmazonApi.Models.Clientes", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Recepciones");
                });

            modelBuilder.Entity("AmazonApi.Models.DespachoEstados", b =>
                {
                    b.Navigation("Despachos");
                });

            modelBuilder.Entity("AmazonApi.Models.Despachos", b =>
                {
                    b.Navigation("Recepciones");
                });

            modelBuilder.Entity("AmazonApi.Models.Paises", b =>
                {
                    b.Navigation("Centros");

                    b.Navigation("Clientes");

                    b.Navigation("TransporteProveedores");
                });

            modelBuilder.Entity("AmazonApi.Models.Pedidos", b =>
                {
                    b.Navigation("Despachos");

                    b.Navigation("PedidoDetalles");
                });

            modelBuilder.Entity("AmazonApi.Models.ProductoTipos", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("AmazonApi.Models.Productos", b =>
                {
                    b.Navigation("Inventarios");

                    b.Navigation("PedidoDetalles");
                });

            modelBuilder.Entity("AmazonApi.Models.TransporteProveedores", b =>
                {
                    b.Navigation("Despachos");
                });

            modelBuilder.Entity("MarketingWebApi.Models.Items", b =>
                {
                    b.Navigation("RolsItems");

                    b.Navigation("UserItems");
                });

            modelBuilder.Entity("MarketingWebApi.Models.Modules", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MarketingWebApi.Models.Rols", b =>
                {
                    b.Navigation("RolsItems");
                });

            modelBuilder.Entity("MarketingWebApi.Models.Users", b =>
                {
                    b.Navigation("UserItems");
                });
#pragma warning restore 612, 618
        }
    }
}
