// <auto-generated />
using System;
using AmazonApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmazonApi.Migrations
{
    [DbContext(typeof(BD_AmazonContext))]
    [Migration("20230524001017_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AmazonApi.Models.CentrosDistribucion", b =>
                {
                    b.Property<int>("CentroDistribucionId")
                        .HasColumnType("int")
                        .HasColumnName("centroDistribucionId");

                    b.Property<string>("DireccionCentro")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccionCentro");

                    b.Property<string>("NombreCentro")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nombreCentro");

                    b.Property<int>("PaisId")
                        .HasColumnType("int")
                        .HasColumnName("paisId");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit")
                        .HasColumnName("visible");

                    b.HasKey("CentroDistribucionId")
                        .HasName("PK__CentrosD__B74C72AEF603E726");

                    b.HasIndex("PaisId");

                    b.ToTable("CentrosDistribucion");
                });

            modelBuilder.Entity("AmazonApi.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("clienteId");

                    b.Property<string>("ApellidoCliente")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("apellidoCliente");

                    b.Property<string>("CorreoCliente")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("correoCliente");

                    b.Property<string>("DireccionCliente")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccionCliente");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nombreCliente");

                    b.Property<int>("PaisId")
                        .HasColumnType("int")
                        .HasColumnName("paisId");

                    b.Property<string>("TelefonoCliente")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("telefonoCliente");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit")
                        .HasColumnName("visible");

                    b.HasKey("ClienteId");

                    b.HasIndex("PaisId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AmazonApi.Models.ConfirmacionRecepcion", b =>
                {
                    b.Property<int>("ConfirmacionRecepcionId")
                        .HasColumnType("int")
                        .HasColumnName("confirmacionRecepcionId");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("clienteId");

                    b.Property<int>("DespachoId")
                        .HasColumnType("int")
                        .HasColumnName("despachoId");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit")
                        .HasColumnName("entregado");

                    b.HasKey("ConfirmacionRecepcionId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DespachoId");

                    b.ToTable("ConfirmacionRecepcion");
                });

            modelBuilder.Entity("AmazonApi.Models.Despacho", b =>
                {
                    b.Property<int>("DespachoId")
                        .HasColumnType("int")
                        .HasColumnName("despachoId");

                    b.Property<int>("EstadoDespachoId")
                        .HasColumnType("int")
                        .HasColumnName("estadoDespachoId");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEntrega");

                    b.Property<string>("ObservacionesAdicionales")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("observacionesAdicionales");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("pedidoId");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("proveedorId");

                    b.HasKey("DespachoId");

                    b.HasIndex("EstadoDespachoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Despachos");
                });

            modelBuilder.Entity("AmazonApi.Models.DetallePedido", b =>
                {
                    b.Property<int>("DetallePedidoId")
                        .HasColumnType("int")
                        .HasColumnName("detallePedidoId");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("pedidoId");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("productoId");

                    b.HasKey("DetallePedidoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetallePedidos");
                });

            modelBuilder.Entity("AmazonApi.Models.EstadoDespacho", b =>
                {
                    b.Property<int>("EstadoDespachoId")
                        .HasColumnType("int")
                        .HasColumnName("estadoDespachoId");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombreEstado");

                    b.HasKey("EstadoDespachoId");

                    b.ToTable("EstadoDespacho");
                });

            modelBuilder.Entity("AmazonApi.Models.EstadoPedido", b =>
                {
                    b.Property<int>("EstadoPedidoId")
                        .HasColumnType("int")
                        .HasColumnName("estadoPedidoId");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombreEstado");

                    b.HasKey("EstadoPedidoId");

                    b.ToTable("EstadoPedidos");
                });

            modelBuilder.Entity("AmazonApi.Models.Iventario", b =>
                {
                    b.Property<int>("InventarioId")
                        .HasColumnType("int")
                        .HasColumnName("inventarioId");

                    b.Property<int>("CentroDistribucionId")
                        .HasColumnType("int")
                        .HasColumnName("centroDistribucionId");

                    b.Property<int>("Entrada")
                        .HasColumnType("int")
                        .HasColumnName("entrada");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("productoId");

                    b.Property<int>("Salida")
                        .HasColumnType("int")
                        .HasColumnName("salida");

                    b.HasKey("InventarioId")
                        .HasName("PK__Iventari__23747585FFBA487B");

                    b.HasIndex("CentroDistribucionId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Iventario");
                });

            modelBuilder.Entity("AmazonApi.Models.Paise", b =>
                {
                    b.Property<int>("PaisId")
                        .HasColumnType("int")
                        .HasColumnName("paisId");

                    b.Property<string>("Nombrepais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombrepais");

                    b.HasKey("PaisId")
                        .HasName("PK__Paises__45785B8B0CC32178");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("AmazonApi.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("pedidoId");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("clienteId");

                    b.Property<string>("DireccionEntrega")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccionEntrega");

                    b.Property<int>("EstadoPedidoId")
                        .HasColumnType("int")
                        .HasColumnName("estadoPedidoId");

                    b.Property<string>("ObservacionesAdicionales")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("observacionesAdicionales");

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("AmazonApi.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("productoId");

                    b.Property<string>("CodigoBarra")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("codigoBarra");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombreProducto");

                    b.Property<int>("TipoProductoId")
                        .HasColumnType("int")
                        .HasColumnName("tipoProductoId");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit")
                        .HasColumnName("visible");

                    b.HasKey("ProductoId");

                    b.HasIndex("TipoProductoId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("AmazonApi.Models.ProveedoresTransporte", b =>
                {
                    b.Property<int>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("proveedorId");

                    b.Property<string>("ApellidoProveedor")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("apellidoProveedor");

                    b.Property<string>("CorreoProveedor")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("correoProveedor");

                    b.Property<string>("DireccionProveedor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccionProveedor");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nombreProveedor");

                    b.Property<int>("PaisId")
                        .HasColumnType("int")
                        .HasColumnName("paisId");

                    b.Property<string>("TelefonoProveedor")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("telefonoProveedor");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit")
                        .HasColumnName("visible");

                    b.HasKey("ProveedorId")
                        .HasName("PK__Proveedo__8253255D2133A20A");

                    b.HasIndex("PaisId");

                    b.ToTable("ProveedoresTransporte");
                });

            modelBuilder.Entity("AmazonApi.Models.TiposProducto", b =>
                {
                    b.Property<int>("TipoProductoId")
                        .HasColumnType("int")
                        .HasColumnName("tipoProductoId");

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombreTipo");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit")
                        .HasColumnName("visible");

                    b.HasKey("TipoProductoId")
                        .HasName("PK__tiposPro__0978E14E2B43D5C4");

                    b.ToTable("tiposProducto");
                });

            modelBuilder.Entity("AmazonApi.Models.CentrosDistribucion", b =>
                {
                    b.HasOne("AmazonApi.Models.Paise", "Pais")
                        .WithMany("CentrosDistribucions")
                        .HasForeignKey("PaisId")
                        .HasConstraintName("FK__CentrosDi__paisI__3C69FB99")
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("AmazonApi.Models.Cliente", b =>
                {
                    b.HasOne("AmazonApi.Models.Paise", "Pais")
                        .WithMany("Clientes")
                        .HasForeignKey("PaisId")
                        .HasConstraintName("FK__Clientes__paisId__398D8EEE")
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("AmazonApi.Models.ConfirmacionRecepcion", b =>
                {
                    b.HasOne("AmazonApi.Models.Cliente", "Cliente")
                        .WithMany("ConfirmacionRecepcions")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK__Confirmac__clien__5AEE82B9")
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.Despacho", "Despacho")
                        .WithMany("ConfirmacionRecepcions")
                        .HasForeignKey("DespachoId")
                        .HasConstraintName("FK__Confirmac__despa__59FA5E80")
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Despacho");
                });

            modelBuilder.Entity("AmazonApi.Models.Despacho", b =>
                {
                    b.HasOne("AmazonApi.Models.EstadoDespacho", "EstadoDespacho")
                        .WithMany("Despachos")
                        .HasForeignKey("EstadoDespachoId")
                        .HasConstraintName("FK__Despachos__estad__571DF1D5")
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.Pedido", "Pedido")
                        .WithMany("Despachos")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FK__Despachos__pedid__5535A963")
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.ProveedoresTransporte", "Proveedor")
                        .WithMany("Despachos")
                        .HasForeignKey("ProveedorId")
                        .HasConstraintName("FK__Despachos__prove__5629CD9C")
                        .IsRequired();

                    b.Navigation("EstadoDespacho");

                    b.Navigation("Pedido");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("AmazonApi.Models.DetallePedido", b =>
                {
                    b.HasOne("AmazonApi.Models.Pedido", "Pedido")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FK__DetallePe__pedid__4CA06362")
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.Producto", "Producto")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK__DetallePe__produ__4D94879B")
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("AmazonApi.Models.Iventario", b =>
                {
                    b.HasOne("AmazonApi.Models.CentrosDistribucion", "CentroDistribucion")
                        .WithMany("Iventarios")
                        .HasForeignKey("CentroDistribucionId")
                        .HasConstraintName("FK__Iventario__centr__440B1D61")
                        .IsRequired();

                    b.HasOne("AmazonApi.Models.Producto", "Producto")
                        .WithMany("Iventarios")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK__Iventario__produ__44FF419A")
                        .IsRequired();

                    b.Navigation("CentroDistribucion");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("AmazonApi.Models.Pedido", b =>
                {
                    b.HasOne("AmazonApi.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK__Pedidos__cliente__47DBAE45")
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AmazonApi.Models.Producto", b =>
                {
                    b.HasOne("AmazonApi.Models.TiposProducto", "TipoProducto")
                        .WithMany("Productos")
                        .HasForeignKey("TipoProductoId")
                        .HasConstraintName("FK__Producto__tipoPr__412EB0B6")
                        .IsRequired();

                    b.Navigation("TipoProducto");
                });

            modelBuilder.Entity("AmazonApi.Models.ProveedoresTransporte", b =>
                {
                    b.HasOne("AmazonApi.Models.Paise", "Pais")
                        .WithMany("ProveedoresTransportes")
                        .HasForeignKey("PaisId")
                        .HasConstraintName("FK__Proveedor__paisI__52593CB8")
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("AmazonApi.Models.CentrosDistribucion", b =>
                {
                    b.Navigation("Iventarios");
                });

            modelBuilder.Entity("AmazonApi.Models.Cliente", b =>
                {
                    b.Navigation("ConfirmacionRecepcions");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("AmazonApi.Models.Despacho", b =>
                {
                    b.Navigation("ConfirmacionRecepcions");
                });

            modelBuilder.Entity("AmazonApi.Models.EstadoDespacho", b =>
                {
                    b.Navigation("Despachos");
                });

            modelBuilder.Entity("AmazonApi.Models.Paise", b =>
                {
                    b.Navigation("CentrosDistribucions");

                    b.Navigation("Clientes");

                    b.Navigation("ProveedoresTransportes");
                });

            modelBuilder.Entity("AmazonApi.Models.Pedido", b =>
                {
                    b.Navigation("Despachos");

                    b.Navigation("DetallePedidos");
                });

            modelBuilder.Entity("AmazonApi.Models.Producto", b =>
                {
                    b.Navigation("DetallePedidos");

                    b.Navigation("Iventarios");
                });

            modelBuilder.Entity("AmazonApi.Models.ProveedoresTransporte", b =>
                {
                    b.Navigation("Despachos");
                });

            modelBuilder.Entity("AmazonApi.Models.TiposProducto", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
